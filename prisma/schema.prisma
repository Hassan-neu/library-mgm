// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique
  userId       String   @db.ObjectId
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

enum UserRole {
  ADMIN
  STUDENT
}

model User {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  firstName  String
  lastName   String
  level      Int?
  faculty    String?
  department String?
  libId      String    @unique
  image      String?
  role       UserRole  @default(STUDENT)
  accounts   Account[]
  sessions   Session[]
  loans      Loan[]
}

model Book {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  title     String
  author    String
  genre     String[]
  image     String
  dateAdded DateTime @default(now())
  copies    Int
}

model Loan {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  bookTitle     String
  bookAuthor    String
  dateCollected DateTime @default(now())
  dueDate       DateTime
  returnStatus  Boolean  @default(false)
  studentId     String
  student       User     @relation(fields: [studentId], references: [libId])
}

model VerificationToken {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
